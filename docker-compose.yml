services:
  db:
    image: postgres:14
    container_name: postgres
    command: -c config_file=/etc/postgresql/postgresql.conf
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgresql.conf:/etc/postgresql/postgresql.conf
    env_file:
      - .env

  pghero:
    image: ankane/pghero
    container_name: pghero
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - db

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    env_file:
      - .env

  api:
    build:
      context: .
      dockerfile: Dockerfile
    command:
      - sh
      - -c
      - |
        python manage.py wait_for_db &&
        python manage.py migrate &&
        python manage.py collectstatic --noinput &&
        gunicorn config.wsgi:application \
          --bind 0.0.0.0:8000 \
          --workers 4 \
          --threads 4 \
          --access-logfile - \
          --access-logformat '%(h)s - - [%(t)s] \"%(r)s\" %(s)s %(b)s'
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/static
      - media_volume:/app/media
    depends_on:
      - db
      - redis
    env_file:
      - .env

  minio:
    image: minio/minio
    container_name: minio
    volumes:
      - minio_volume:/data
    env_file:
      - .env
    command: 'minio server /data --console-address ":9001"'
    ports:
      - "9000:9000"
      - "9001:9001"
  
  celery:
    image: ebs-task-management-system-api
    container_name: celery_worker
    command: celery -A config worker -l INFO -E
    depends_on:
      - redis
    env_file:
      - .env

  celery-beat:
    image: ebs-task-management-system-api
    container_name: celery_beat
    command: celery -A config beat -l INFO
    depends_on:
      - redis
      - celery
    env_file:
      - .env

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "8025:8025"  # Web UI
      - "1025:1025"  # SMTP server

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  minio_volume:
    driver: local